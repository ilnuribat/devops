user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main  '$remote_addr - $remote_user [$time_local] "$request" '
            '$status $body_bytes_sent "$http_referer" '
            '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile on;
    keepalive_timeout 65;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;
        # if there are certs - use it
        server_name dev.scis.xyz;

        {% if domain_name is defined %}
          listen 443 ssl;
          ssl_certificate /certs/cert.pem;
          ssl_certificate_key /certs/privkey.pem;
        {% endif %}

        client_max_body_size 32m;
        root /app/build;

        location /api/graphql {
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass http://127.0.0.1:8500/graphql;
            proxy_http_version 1.1;
        }

        location /api/download {
            proxy_pass http://127.0.0.1:8500/download;
        }

        location /api {
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://127.0.0.1:8500/$uri;
        }
        location /images {
            root /app;
            default_type "text/jpg";
            try_files $uri $uri.jpg $uri.JPG $uri.png $uri.jpeg /images/download;
        }
        location / {
            index index.html;
            try_files $uri $uri/ /index.html;
        }
    }
}
